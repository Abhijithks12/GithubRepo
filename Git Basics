Common console commands: 
 cd - change directory
 mkdir - make directory
 ls - view the files/folders in directory

NOTE: Exit VIM if needed ctrl + c then type :qa! and push enter
NOTE: If file is not in local repo, manually move the file into 
       the correct folder (outside of console)

--------------------------------------------
 Managing your Local Repo
--------------------------------------------
NOTE: If you need to hard reset your local repo to match 
       the remote master use the following commands:
 $ git fetch origin
 $ git reset --hard origin/master
 
Undo the act of committing, leaving everything else intact:
 $ git reset --soft HEAD^:

Undo the act of committing and everything you'd staged, 
but leave the work tree (your files intact):
 $ git reset HEAD^

Completely undo it, throwing away all uncommitted changes,
 resetting everything to the previous commit:
 $ git reset --hard HEAD^
 
--------------------------------------------  
 BEGIN WORKFLOW
-------------------------------------------- 
Clone the Repo to local machine:
 $ git clone https://github.com/user_name/repo_name.git
 
Make sure the local master is up-to-date:
 $ git pull origin main

Create new branch:
 $ git banch branch_name
 
Move to branch:
 $ git checkout branch_name
 
Navigate file structure as needed:
 $ ls 
 $ cd folder_name
 
Add the files to the branch:
 $ git add .
 
Verify file: 
 $ git status
 
Commit the files:
 $ git commit -m "comment"
 
Add branch and files to the Remote Repo:
 $ git push -u origin branch_name
 
Go to the github website to manage pull request and merge. 
 
Switch back to local master so you can delete the local branch:
 $ git checkout main
 
Delete local branch: 
 $ git branch -d branch_name
 OR 
 $ git branch -D branch_name
 
 If you don't want to go to the website, you can merge your branch 
 to the master locally and push the new master to the remote repo:
 
Switch back to master branch:
 $ git checkout main
 
Merge the branch with the local master:
 $ git merge branch_name -m "comment"
 
Push the local master to the remote master:
 $ git push origin main
 
Delete local branch: 
 $ git branch -d branch_name
 OR 
 $ git branch -D branch_name



 basic commands to start with 

 git clone   Https link
 git status 
 git add .
 git commit -m " message "
 git push 
 git push -u origin main



 create new bracnch 

 git pull 
 git checkout -b [bracnch name]
 git push origin [name of your branch]


 testing the push

=========================
Common console commands: 
 cd - change directory
 mkdir - make directory
 ls - view the files/folders in directory

NOTE: Exit VIM if needed ctrl + c then type :qa! and push enter
NOTE: If file is not in local repo, manually move the file into 
       the correct folder (outside of console)

--------------------------------------------
 Managing your Local Repo
--------------------------------------------
NOTE: If you need to hard reset your local repo to match 
       the remote master use the following commands:
 $ git fetch origin
 $ git reset --hard origin/master
 
Undo the act of committing, leaving everything else intact:
 $ git reset --soft HEAD^:

Undo the act of committing and everything you'd staged, 
but leave the work tree (your files intact):
 $ git reset HEAD^

Completely undo it, throwing away all uncommitted changes,
 resetting everything to the previous commit:
 $ git reset --hard HEAD^
 
--------------------------------------------  
 BEGIN WORKFLOW
-------------------------------------------- 
Clone the Repo to local machine:
 $ git clone https://github.com/user_name/repo_name.git
 
Make sure the local master is up-to-date:
 $ git pull origin main

Create new branch:
 $ git banch branch_name
 
Move to branch:
 $ git checkout branch_name
 
Navigate file structure as needed:
 $ ls 
 $ cd folder_name
 
Add the files to the branch:
 $ git add .
 
Verify file: 
 $ git status
 
Commit the files:
 $ git commit -m "comment"
 
Add branch and files to the Remote Repo:
 $ git push -u origin branch_name
 
Go to the github website to manage pull request and merge. 
 
Switch back to local master so you can delete the local branch:
 $ git checkout main
 
Delete local branch: 
 $ git branch -d branch_name
 OR 
 $ git branch -D branch_name
 
 If you don't want to go to the website, you can merge your branch 
 to the master locally and push the new master to the remote repo:
 
Switch back to master branch:
 $ git checkout main
 
Merge the branch with the local master:
 $ git merge branch_name -m "comment"
 
Push the local master to the remote master:
 $ git push origin main
 
Delete local branch: 
 $ git branch -d branch_name
 OR 
 $ git branch -D branch_name



 basic commands to start with 

 git clone   Https link
 git status 
 git add .
 git commit -m " message "
 git push 
 git push -u origin main



 create new bracnch 

 git pull 
 git checkout -b [bracnch name]
 git push origin [name of your branch]


 testing the push 


These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

=====================================================================



